
firmware_cortex_m3:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000060  00000000  00000000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .debug_abbrev 0000008d  00000000  00000000  00008060  2**0
                  CONTENTS, READONLY, DEBUGGING
  2 .debug_info   0000009e  00000000  00000000  000080ed  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_line   0000003e  00000000  00000000  0000818b  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_frame  00000020  00000000  00000000  000081cc  2**2
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 0000003c  00000000  00000000  000081ec  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_aranges 00000020  00000000  00000000  00008228  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_str    0000007f  00000000  00000000  00008248  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .comment      0000002b  00000000  00000000  000082c7  2**0
                  CONTENTS, READONLY
  9 .ARM.attributes 00000031  00000000  00000000  000082f2  2**0
                  CONTENTS, READONLY
Disassembly of section .text:

00000000 <_pointers>:
   0:	20002000 	.word	0x20002000

00000004 <vectors>:
   4:	00000041 00000000 00000000 00000000     A...............
	...

00000040 <sysinit>:

/* ---------------------------------------------------------------------------
 * The function will be started after RESET.
 * ------------------------------------------------------------------------ */

void sysinit() {
  40:	f04f 5200 	mov.w	r2, #536870912	; 0x20000000
    unsigned char *ptr;

    /* Initialize ".data" section with binary 0s */
    for (ptr = (unsigned char *)RAM_BASE; ptr < (unsigned char *)(MAIN_STACK); ptr++)
  44:	f242 0300 	movw	r3, #8192	; 0x2000
  48:	4619      	mov	r1, r3
  4a:	f2c2 0100 	movt	r1, #8192	; 0x2000
        *ptr = 0;
  4e:	f04f 0300 	mov.w	r3, #0	; 0x0
  52:	f802 3b01 	strb.w	r3, [r2], #1

void sysinit() {
    unsigned char *ptr;

    /* Initialize ".data" section with binary 0s */
    for (ptr = (unsigned char *)RAM_BASE; ptr < (unsigned char *)(MAIN_STACK); ptr++)
  56:	428a      	cmp	r2, r1
  58:	d1f9      	bne.n	4e <sysinit+0xe>
        *ptr = 0;

    /* Main loop increments a counter */

    for (;;)
        asm("nop");
  5a:	bf00      	nop
  5c:	e7fd      	b.n	5a <sysinit+0x1a>
  5e:	46c0      	nop			(mov r8, r8)
